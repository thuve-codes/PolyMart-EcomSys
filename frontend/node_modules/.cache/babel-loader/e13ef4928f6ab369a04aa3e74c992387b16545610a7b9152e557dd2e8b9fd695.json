{"ast":null,"code":"import{Fragment,useState}from\"react\";import{Link}from\"react-router-dom\";import{toast}from\"react-toastify\";import{FaPlus,FaMinus,FaTrash,FaArrowLeft,FaCreditCard,FaMapMarkerAlt,FaUser}from\"react-icons/fa\";import{CardElement,useStripe,useElements}from\"@stripe/react-stripe-js\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Cart(_ref){let{cartItems,setCartItems}=_ref;const stripe=useStripe();const elements=useElements();const[activeStep,setActiveStep]=useState(\"cart\");// 'cart', 'checkout', 'complete'\nconst API_URL=\"http://localhost:5001\";const[formData,setFormData]=useState({fullName:\"\",email:\"\",phone:\"\",address:\"\",city:\"\",zipCode:\"\",country:\"LK\"});const totalItems=cartItems.reduce((acc,item)=>acc+item.qty,0);const subtotal=cartItems.reduce((acc,item)=>acc+item.product.price*item.qty,0);const shipping=subtotal>2500?0:250;const tax=subtotal*0.05;const total=subtotal+shipping+tax;const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};// Functions for cart manipulation\nconst decreaseQty=item=>{const updatedCart=cartItems.map(cartItem=>cartItem.product._id===item.product._id&&cartItem.qty>1?{...cartItem,qty:cartItem.qty-1}:cartItem);setCartItems(updatedCart);};const increaseQty=item=>{const updatedCart=cartItems.map(cartItem=>cartItem.product._id===item.product._id&&cartItem.qty<item.product.stock?{...cartItem,qty:cartItem.qty+1}:cartItem);setCartItems(updatedCart);};const removeItem=item=>{const updatedCart=cartItems.filter(cartItem=>cartItem.product._id!==item.product._id);setCartItems(updatedCart);};// Stripe payment integration\nasync function placeOrderHandler(e){e.preventDefault();if(!stripe||!elements){toast.error(\"Stripe not loaded yet\");return;}try{// Fetch payment intent client secret from backend first\nconst paymentIntentRes=await fetch(`${API_URL}/api/v1/payment`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({amount:total*100// Stripe expects amount in cents\n})});const{clientSecret}=await paymentIntentRes.json();const result=await stripe.confirmCardPayment(clientSecret,{payment_method:{card:elements.getElement(CardElement),billing_details:{name:formData.fullName,email:formData.email,phone:formData.phone,address:{line1:formData.address,city:formData.city,postal_code:formData.zipCode,country:formData.country}}}});if(result.error){toast.error(result.error.message);return;}if(result.paymentIntent.status===\"succeeded\"){// Now create the order in backend\nconst orderResponse=await fetch(`${API_URL}/api/v1/order`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({cartItems,formData,subtotal,shipping,tax,total,paymentIntentId:result.paymentIntent.id})});const orderData=await orderResponse.json();if(!orderResponse.ok){throw new Error(orderData.error||\"Failed to place order\");}setCartItems([]);setActiveStep(\"complete\");toast.success(\"Order placed successfully!\");}}catch(error){console.error(error);toast.error(error.message||\"Order placement failed\");}}if(activeStep===\"complete\"){return/*#__PURE__*/_jsx(\"div\",{className:\"order-complete\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"complete-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"checkmark\",children:\"\\u2713\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Order Confirmed!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Thank you for your purchase. Your order has been received.\"}),/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn continue-shopping\",children:\"Continue Shopping\"})]})});}return cartItems.length>0?/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"cart-container\",children:[activeStep===\"checkout\"&&/*#__PURE__*/_jsxs(\"button\",{className:\"back-to-cart\",onClick:()=>setActiveStep(\"cart\"),children:[/*#__PURE__*/_jsx(FaArrowLeft,{}),\" Back to Cart\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-content\",children:activeStep===\"cart\"?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-items-section\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"cart-title\",children:[\"Your Shopping Cart \",/*#__PURE__*/_jsxs(\"span\",{children:[\"(\",totalItems,\" items)\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h5\",{children:\"Buy morethan 2500 and get free shipping\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-items\",children:cartItems.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"item-image-container\",children:/*#__PURE__*/_jsx(\"img\",{src:item.product.images[0].image,alt:item.product.name,className:\"cart-item-image\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-info\",children:[/*#__PURE__*/_jsx(Link,{to:`/product/${item.product._id}`,className:\"cart-item-name\",children:item.product.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"cart-item-price\",children:[\"Rs \",item.product.price.toLocaleString()]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"quantity-control\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"qty-btn\",onClick:()=>decreaseQty(item),disabled:item.qty<=1,\"data-tooltip\":\"Decrease quantity\",children:/*#__PURE__*/_jsx(FaMinus,{})}),/*#__PURE__*/_jsx(\"span\",{className:\"quantity\",children:item.qty}),/*#__PURE__*/_jsx(\"button\",{className:\"qty-btn\",onClick:()=>increaseQty(item),disabled:item.qty>=item.product.stock,\"data-tooltip\":\"Increase quantity\",children:/*#__PURE__*/_jsx(FaPlus,{})})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"remove-btn\",onClick:()=>removeItem(item),\"data-tooltip\":\"Remove item\",children:[/*#__PURE__*/_jsx(FaTrash,{}),\" Remove\"]})]})]})]},item.product._id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"order-summary-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"order-summary\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Order Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Subtotal\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Rs \",subtotal.toLocaleString()]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Shipping\"}),/*#__PURE__*/_jsx(\"span\",{children:shipping===0?\"FREE\":`Rs ${shipping}`})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Tax (5%)\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Rs \",tax.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Rs \",total.toFixed(2)]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"checkout-btn\",onClick:()=>setActiveStep(\"checkout\"),children:\"Proceed to Checkout\"})]})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"checkout-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"checkout-form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Checkout\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:placeOrderHandler,className:\"checkout-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(FaUser,{}),\" Personal Information\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"fullName\",value:formData.fullName,onChange:handleChange,placeholder:\"Full Name\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,placeholder:\"Email Address\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"phone\",value:formData.phone,onChange:handleChange,placeholder:\"Phone Number\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(FaMapMarkerAlt,{}),\" Shipping Address\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"address\",value:formData.address,onChange:handleChange,placeholder:\"Street Address\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"city\",value:formData.city,onChange:handleChange,placeholder:\"City\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"zipCode\",value:formData.zipCode,onChange:handleChange,placeholder:\"Zip Code\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"country\",value:formData.country,onChange:handleChange,placeholder:\"Country\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(FaCreditCard,{}),\" Payment Details\"]}),/*#__PURE__*/_jsx(CardElement,{options:{style:{base:{fontSize:'16px',color:'#424770','::placeholder':{color:'#aab7c4'}},invalid:{color:'#9e2146'}}}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"order-summary-checkout\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Order Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Rs \",total.toFixed(2)]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"place-order-btn\",children:\"Place Order\"})]})]})]})})})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"empty-cart\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your cart is empty!\"}),/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn continue-shopping\",children:\"Continue Shopping\"})]});}// import { Fragment, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\n// import { FaPlus, FaMinus, FaTrash, FaArrowLeft, FaCreditCard, FaMapMarkerAlt, FaUser } from \"react-icons/fa\";\n// import { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n// const stripe = useStripe();\n// const elements = useElements();\n// export default function Cart({ cartItems, setCartItems }) {\n//   const [activeStep, setActiveStep] = useState(\"cart\"); // 'cart', 'checkout', 'complete'\n//   const API_URL = \"http://localhost:5001\";\n//   // Example for your Product component\n//   async function placeOrderHandler(e) {\n//     e.preventDefault();\n//     // Validate all required fields\n//     const requiredFields = ['fullName', 'email', 'phone', 'address', 'city', 'zipCode', 'country'];\n//     const missingFields = requiredFields.filter(field => !formData[field].trim());\n//     if (missingFields.length > 0) {\n//       toast.error(`Missing required fields: ${missingFields.join(', ')}`);\n//       return;\n//     }\n//     // Validate payment details\n//     const cardNum = formData.cardNumber.replace(/\\s/g, '');\n//     if (!/^\\d{16}$/.test(cardNum)) {\n//       toast.error('Invalid card number (must be 16 digits)');\n//       return;\n//     }\n//     try {\n//       const orderData = {\n//         cartItems: cartItems.map(item => ({\n//           product: {\n//             _id: item.product._id,\n//             name: item.product.name,\n//             price: item.product.price\n//           },\n//           qty: item.qty\n//         })),\n//         formData: {\n//           ...formData,\n//           // Ensure phone is string (some validations expect string)\n//           phone: String(formData.phone)\n//         },\n//         subtotal,\n//         shipping,\n//         tax,\n//         total\n//       };\n//       const response = await fetch(`${API_URL}/api/v1/order`, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(orderData)\n//       });\n//       const data = await response.json();\n//       if (!response.ok) {\n//         // Handle specific backend validation errors\n//         if (data.error && data.error.includes('validation failed')) {\n//           const validationErrors = Object.entries(data.errors || {})\n//             .map(([field, error]) => `${field}: ${error.message}`);\n//           toast.error(`Validation errors:\\n${validationErrors.join('\\n')}`);\n//         } else {\n//           throw new Error(data.message || 'Failed to place order');\n//         }\n//         return;\n//       }\n//       // Success case\n//       setCartItems([]);\n//       setActiveStep('complete');\n//       toast.success('Order confirmed!');\n//     } catch (error) {\n//       console.error('Order error:', error);\n//       toast.error(error.message || 'Failed to place order. Please try again.');\n//     }\n//   }\n//   const [formData, setFormData] = useState({\n//     fullName: \"\",\n//     email: \"\",\n//     phone: \"\",\n//     address: \"\",\n//     city: \"\",\n//     zipCode: \"\",\n//     country: \"\",\n//     cardNumber: \"\",\n//     expiryDate: \"\",\n//     cvv: \"\",\n//   });\n//   function increaseQty(item) {\n//     if (item.product.stock <= item.qty) {\n//       toast.warning(`Only ${item.product.stock} available in stock`);\n//       return;\n//     }\n//     const updatedItems = cartItems.map((i) =>\n//       i.product._id === item.product._id ? { ...i, qty: i.qty + 1 } : i\n//     );\n//     setCartItems(updatedItems);\n//   }\n//   function decreaseQty(item) {\n//     if (item.qty > 1) {\n//       const updatedItems = cartItems.map((i) =>\n//         i.product._id === item.product._id ? { ...i, qty: i.qty - 1 } : i\n//       );\n//       setCartItems(updatedItems);\n//     }\n//   }\n//   function removeItem(item) {\n//     const updatedItems = cartItems.filter((i) => i.product._id !== item.product._id);\n//     setCartItems(updatedItems);\n//     toast.success(`${item.product.name} removed from cart`);\n//   }\n//   async function placeOrderHandler(e) {\n//     e.preventDefault();\n//     // Validate all form fields\n//     const emptyFields = Object.entries(formData).some(([key, value]) => {\n//       // Skip CVV validation here if you have separate validation\n//       if (key === 'cvv') return false;\n//       return value.trim() === \"\";\n//     });\n//     if (emptyFields) {\n//       toast.error(\"All fields are required!\");\n//       return;\n//     }\n//     // Validate card details\n//     if (!/^\\d{16}$/.test(formData.cardNumber.replace(/\\s/g, ''))) {\n//       toast.error(\"Please enter a valid 16-digit card number\");\n//       return;\n//     }\n//     if (!/^\\d{3,4}$/.test(formData.cvv)) {\n//       toast.error(\"Please enter a valid CVV (3 or 4 digits)\");\n//       return;\n//     }\n//     try {\n//       const response = await fetch(`${API_URL}/api/v1/order`, {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({\n//           cartItems,\n//           formData,\n//           subtotal,\n//           shipping,\n//           tax,\n//           total\n//         }),\n//       });\n//       const data = await response.json();\n//       if (!response.ok) {\n//         throw new Error(data.error || 'Failed to plac0e order2121131161');\n//       }\n//       if (data.success) {\n//         setCartItems([]);\n//         setActiveStep(\"complete\");\n//         toast.success(\"Order Confirmed!\");\n//       } else {\n//         if (data.stockIssues) {\n//           // Handle stock issues\n//           data.stockIssues.forEach(issue => {\n//             toast.error(`${issue.name}: ${issue.error}${issue.available ? ` (Available: ${issue.available})` : ''}`);\n//           });\n//           // Remove problematic items from cart\n//           const updatedCart = cartItems.filter(item => \n//             !data.stockIssues.some(issue => issue.productId === item.product._id)\n//           );\n//           setCartItems(updatedCart);\n//         } else {\n//           toast.error(data.error || \"Failed to placepjkk order\");\n//         }\n//       }\n//     } catch (error) {\n//       console.error(\"Order error:\", error);\n//       toast.error(error.message || \"Failed to place order. Please try again.\");\n//     }\n//   }\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n//   const totalItems = cartItems.reduce((acc, item) => acc + item.qty, 0);\n//   const subtotal = cartItems.reduce((acc, item) => acc + item.product.price * item.qty, 0);\n//   const shipping = subtotal > 5000 ? 0 : 250;\n//   const tax = subtotal * 0.05;\n//   const total = subtotal + shipping + tax;\n//   if (activeStep === \"complete\") {\n//     return (\n//       <div className=\"order-complete\">\n//         <div className=\"complete-card\">\n//           <div className=\"checkmark\">✓</div>\n//           <h2>Order Confirmed!</h2>\n//           <p>Thank you for your purchase. Your order has been received.</p>\n//           <Link to=\"/\" className=\"btn continue-shopping\">\n//             Continue Shopping\n//           </Link>\n//         </div>\n//       </div>\n//     );\n//   }\n//   //Stripe payment integration\n//   async function placeOrderHandler(e) {\n//     e.preventDefault();\n//     if (!stripe || !elements) {\n//       toast.error(\"Stripe not loaded yet\");\n//       return;\n//     }\n//     try {\n//       // Fetch payment intent client secret from backend first\n//       const paymentIntentRes = await fetch(`${API_URL}/api/v1/create-payment-intent`, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ \n//           amount: total * 100 // Stripe expects amount in cents\n//         }),\n//       });\n//       const { clientSecret } = await paymentIntentRes.json();\n//       const result = await stripe.confirmCardPayment(clientSecret, {\n//         payment_method: {\n//           card: elements.getElement(CardElement),\n//           billing_details: {\n//             name: formData.fullName,\n//             email: formData.email,\n//             phone: formData.phone,\n//             address: {\n//               line1: formData.address,\n//               city: formData.city,\n//               postal_code: formData.zipCode,\n//               country: formData.country,\n//             },\n//           },\n//         },\n//       });\n//       if (result.error) {\n//         toast.error(result.error.message);\n//         return;\n//       }\n//       if (result.paymentIntent.status === \"succeeded\") {\n//         // Now create the order in backend\n//         const orderResponse = await fetch(`${API_URL}/api/v1/order`, {\n//           method: \"POST\",\n//           headers: { \"Content-Type\": \"application/json\" },\n//           body: JSON.stringify({\n//             cartItems,\n//             formData,\n//             subtotal,\n//             shipping,\n//             tax,\n//             total,\n//             paymentIntentId: result.paymentIntent.id,\n//           }),\n//         });\n//         const orderData = await orderResponse.json();\n//         if (!orderResponse.ok) {\n//           throw new Error(orderData.error || \"Failed to place order\");\n//         }\n//         setCartItems([]);\n//         setActiveStep(\"complete\");\n//         toast.success(\"Order placed successfully!\");\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       toast.error(error.message || \"Order placement failed\");\n//     }\n//   }\n//   return cartItems.length > 0 ? (\n//     <Fragment>\n//       <div className=\"cart-container\">\n//         {activeStep === \"checkout\" && (\n//           <button className=\"back-to-cart\" onClick={() => setActiveStep(\"cart\")}>\n//             <FaArrowLeft /> Back to Cart\n//           </button>\n//         )}\n//         <div className=\"cart-content\">\n//           {activeStep === \"cart\" ? (\n//             <>\n//               <div className=\"cart-items-section\">\n//                 <h2 className=\"cart-title\">\n//                   Your Shopping Cart <span>({totalItems} items)</span>\n//                 </h2>\n//                 <div className=\"cart-items\">\n//                   {cartItems.map((item) => (\n//                     <div key={item.product._id} className=\"cart-item\">\n//                       <div className=\"item-image-container\">\n//                         <img\n//                           src={item.product.images[0].image}\n//                           alt={item.product.name}\n//                           className=\"cart-item-image\"\n//                         />\n//                       </div>\n//                       <div className=\"cart-item-details\">\n//                         <div className=\"item-info\">\n//                           <Link to={`/product/${item.product._id}`} className=\"cart-item-name\">\n//                             {item.product.name}\n//                           </Link>\n//                           <p className=\"cart-item-price\">Rs {item.product.price.toLocaleString()}</p>\n//                         </div>\n//                         <div className=\"item-controls\">\n//                         <div className=\"quantity-control\">\n//   <button\n//     className=\"qty-btn\"\n//     onClick={() => decreaseQty(item)}\n//     disabled={item.qty <= 1}\n//     data-tooltip=\"Decrease quantity\"\n//   >\n//     <FaMinus />\n//   </button>\n//   <span className=\"quantity\">{item.qty}</span>\n//   <button\n//     className=\"qty-btn\"\n//     onClick={() => increaseQty(item)}\n//     disabled={item.qty >= item.product.stock}\n//     data-tooltip=\"Increase quantity\"\n//   >\n//     <FaPlus />\n//   </button>\n// </div>\n// <button \n//   className=\"remove-btn\" \n//   onClick={() => removeItem(item)}\n//   data-tooltip=\"Remove item\"\n// >\n//   <FaTrash /> Remove\n// </button>\n//                         </div>\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n//               </div>\n//               <div className=\"order-summary-section\">\n//   <div className=\"order-summary\">\n//     <h3>Order Summary</h3>\n//     <div className=\"summary-row\">\n//       <span>Subtotal</span>\n//       <span>Rs {subtotal.toLocaleString()}</span>\n//     </div>\n//     <div className=\"summary-row\">\n//       <span>Shipping</span>\n//       <span>{shipping === 0 ? \"FREE\" : `Rs ${shipping}`}</span>\n//     </div>\n//     <div className=\"summary-row\">\n//       <span>Tax (5%)</span>\n//       <span>Rs {tax.toFixed(2)}</span>\n//     </div>\n//     <div className=\"summary-row total\">\n//       <span>Total</span>\n//       <span>Rs {total.toFixed(2)}</span>\n//     </div>\n//     <button\n//       className=\"checkout-btn\"\n//       onClick={() => setActiveStep(\"checkout\")}\n//     >\n//       Proceed to Checkout\n//     </button>\n//   </div>\n// </div>\n//             </>\n//           ) : (\n//             <div className=\"checkout-section\">\n//               <div className=\"checkout-form-container\">\n//                 <h2>Checkout</h2>\n//                 <div className=\"checkout-steps\">\n//                   <div className={`step ${activeStep === \"cart\" ? \"active\" : \"\"}`}>\n//                     <span>1</span> Cart\n//                   </div>\n//                   <div className={`step ${activeStep === \"checkout\" ? \"active\" : \"\"}`}>\n//                     <span>2</span> Checkout\n//                   </div>\n//                   <div className={`step ${activeStep === \"complete\" ? \"active\" : \"\"}`}>\n//                     <span>3</span> Confirmation<br/>\n//                   </div>\n//                 </div>\n//                 <form onSubmit={placeOrderHandler} className=\"checkout-form\">\n//                   <div className=\"form-section\">\n//                     <br/>\n//                     <h3><FaUser /> Personal Information</h3>\n//                     <div className=\"form-group\">\n//                       <input\n//                         type=\"text\"\n//                         name=\"fullName\"\n//                         value={formData.fullName}\n//                         onChange={handleChange}\n//                         placeholder=\"Name\"\n//                         required\n//                       />\n//                     <input\n//                         type=\"email\"\n//                         name=\"email\"\n//                         value={formData.email}\n//                         onChange={handleChange}\n//                         placeholder=\"Email Address\"\n//                         required\n//                       />\n//                       <input\n//                         type=\"number\"\n//                         name=\"phone\"\n//                         value={formData.phone}\n//                         onChange={handleChange}\n//                         placeholder=\"Phone Number\"\n//                         required\n//                       />\n//                     </div>\n//                   </div>\n//                   {/*→ Stripe does NOT allow you to collect raw card details using normal inputs (for security/PCI-DSS rules).\n//                   → You must use Stripe's CardElement or Stripe Elements to securely handle card numbers, expiry, CVV etc.8→*/}\n//                   <div className=\"form-section\">\n//                     <h3><FaMapMarkerAlt /> Shipping Address</h3>\n//                     <div className=\"form-group\">\n//                       <input\n//                         type=\"text\"\n//                         name=\"address\"\n//                         value={formData.address}\n//                         onChange={handleChange}\n//                         placeholder=\"Street Address\"\n//                         required\n//                       />\n//                     </div>\n//                     <div className=\"form-row\">\n//                       <div className=\"form-group\">\n//                         <input\n//                           type=\"text\"\n//                           name=\"city\"\n//                           value={formData.city}\n//                           onChange={handleChange}\n//                           placeholder=\"City\"\n//                           required\n//                         />\n//                       </div>\n//                       <div className=\"form-group\">\n//                         <input\n//                           type=\"text\"\n//                           name=\"zipCode\"\n//                           value={formData.zipCode}\n//                           onChange={handleChange}\n//                           placeholder=\"Zip Code\"\n//                           required\n//                         />\n//                       </div>\n//                     </div>\n//                     <div className=\"form-group\">\n//                       <input\n//                         type=\"text\"\n//                         name=\"country\"\n//                         value={formData.country}\n//                         onChange={handleChange}\n//                         placeholder=\"Country\"\n//                         required\n//                       />\n//                     </div>\n//                   </div><div className=\"form-section\">\n//                   <h3><FaCreditCard /> Payment Details</h3>\n//                   <div className=\"form-group\">\n//                     <CardElement options={{\n//                       style: {\n//                         base: {\n//                           fontSize: '16px',\n//                           color: '#424770',\n//                           '::placeholder': {\n//                             color: '#aab7c4',\n//                           },\n//                         },\n//                         invalid: {\n//                           color: '#9e2146',\n//                         },\n//                       },\n//                     }} />\n//                   </div>\n//                 </div>\n//                   <div className=\"order-summary-checkout\">\n//                     <h3>Order Summary</h3>\n//                     {cartItems.map((item) => (\n//                       <div key={item.product._id} className=\"checkout-item\">\n//                         <span>\n//                           {item.product.name} × {item.qty}\n//                         </span>\n//                         <span>Rs {(item.product.price * item.qty).toLocaleString()}</span>\n//                       </div>\n//                     ))}\n//                     <div className=\"summary-row\">\n//                       <span>Subtotal</span>\n//                       <span>Rs {subtotal.toLocaleString()}</span>\n//                     </div>\n//                     <div className=\"summary-row\">\n//                       <span>Shipping</span>\n//                       <span>{shipping === 0 ? \"FREE\" : `Rs ${shipping}`}</span>\n//                     </div>\n//                     <div className=\"summary-row\">\n//                       <span>Tax (5%)</span>\n//                       <span>Rs {tax.toFixed(2)}</span>\n//                     </div>\n//                     <div className=\"summary-row total\">\n//                       <span>Total</span>\n//                       <span>Rs {total.toFixed(2)}</span>\n//                     </div>\n//                     <button type=\"submit\" className=\"place-order-btn\">\n//                       Place Order\n//                     </button>\n//                   </div>\n//                 </form>\n//               </div>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Fragment>\n//   ) : (\n//     <div className=\"empty-cart\">\n//       <div className=\"empty-cart-content\">\n//         <div className=\"empty-cart-icon\">🛒</div>\n//         <h2>Your cart is empty</h2>\n//         <p>Looks like you haven't added anything to your cart yet</p>\n//         <Link to=\"/\" className=\"btn continue-shopping\">\n//           Continue Shopping\n//         </Link>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":["Fragment","useState","Link","toast","FaPlus","FaMinus","FaTrash","FaArrowLeft","FaCreditCard","FaMapMarkerAlt","FaUser","CardElement","useStripe","useElements","jsx","_jsx","jsxs","_jsxs","_Fragment","Cart","_ref","cartItems","setCartItems","stripe","elements","activeStep","setActiveStep","API_URL","formData","setFormData","fullName","email","phone","address","city","zipCode","country","totalItems","reduce","acc","item","qty","subtotal","product","price","shipping","tax","total","handleChange","e","target","name","value","decreaseQty","updatedCart","map","cartItem","_id","increaseQty","stock","removeItem","filter","placeOrderHandler","preventDefault","error","paymentIntentRes","fetch","method","headers","body","JSON","stringify","amount","clientSecret","json","result","confirmCardPayment","payment_method","card","getElement","billing_details","line1","postal_code","message","paymentIntent","status","orderResponse","paymentIntentId","id","orderData","ok","Error","success","console","className","children","to","length","onClick","src","images","image","alt","toLocaleString","disabled","toFixed","onSubmit","type","onChange","placeholder","required","options","style","base","fontSize","color","invalid"],"sources":["C:/Users/thuve/Desktop/myCodes/Docker/PolyMart-EcomSys/frontend/src/pages/Cart.js"],"sourcesContent":["import { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FaPlus, FaMinus, FaTrash, FaArrowLeft, FaCreditCard, FaMapMarkerAlt, FaUser } from \"react-icons/fa\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n\r\nexport default function Cart({ cartItems, setCartItems }) {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [activeStep, setActiveStep] = useState(\"cart\"); // 'cart', 'checkout', 'complete'\r\n  const API_URL = \"http://localhost:5001\";\r\n\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    zipCode: \"\",\r\n    country: \"LK\",\r\n  });\r\n\r\n  const totalItems = cartItems.reduce((acc, item) => acc + item.qty, 0);\r\n  const subtotal = cartItems.reduce((acc, item) => acc + item.product.price * item.qty, 0);\r\n  const shipping = subtotal > 2500 ? 0 : 250;\r\n  const tax = subtotal * 0.05;\r\n  const total = subtotal + shipping + tax;\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Functions for cart manipulation\r\n  const decreaseQty = (item) => {\r\n    const updatedCart = cartItems.map((cartItem) =>\r\n      cartItem.product._id === item.product._id && cartItem.qty > 1\r\n        ? { ...cartItem, qty: cartItem.qty - 1 }\r\n        : cartItem\r\n    );\r\n    setCartItems(updatedCart);\r\n  };\r\n\r\n  const increaseQty = (item) => {\r\n    const updatedCart = cartItems.map((cartItem) =>\r\n      cartItem.product._id === item.product._id && cartItem.qty < item.product.stock\r\n        ? { ...cartItem, qty: cartItem.qty + 1 }\r\n        : cartItem\r\n    );\r\n    setCartItems(updatedCart);\r\n  };\r\n\r\n  const removeItem = (item) => {\r\n    const updatedCart = cartItems.filter((cartItem) => cartItem.product._id !== item.product._id);\r\n    setCartItems(updatedCart);\r\n  };\r\n\r\n  // Stripe payment integration\r\n  async function placeOrderHandler(e) {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      toast.error(\"Stripe not loaded yet\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Fetch payment intent client secret from backend first\r\n      const paymentIntentRes = await fetch(`${API_URL}/api/v1/payment`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ \r\n          amount: total * 100 // Stripe expects amount in cents\r\n        }),\r\n      });\r\n\r\n      const { clientSecret } = await paymentIntentRes.json();\r\n\r\n      const result = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n          billing_details: {\r\n            name: formData.fullName,\r\n            email: formData.email,\r\n            phone: formData.phone,\r\n            address: {\r\n              line1: formData.address,\r\n              city: formData.city,\r\n              postal_code: formData.zipCode,\r\n              country: formData.country,\r\n            },\r\n          },\r\n        },\r\n      });\r\n\r\n      if (result.error) {\r\n        toast.error(result.error.message);\r\n        return;\r\n      }\r\n\r\n      if (result.paymentIntent.status === \"succeeded\") {\r\n        // Now create the order in backend\r\n        const orderResponse = await fetch(`${API_URL}/api/v1/order`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            cartItems,\r\n            formData,\r\n            subtotal,\r\n            shipping,\r\n            tax,\r\n            total,\r\n            paymentIntentId: result.paymentIntent.id,\r\n          }),\r\n        });\r\n\r\n        const orderData = await orderResponse.json();\r\n\r\n        if (!orderResponse.ok) {\r\n          throw new Error(orderData.error || \"Failed to place order\");\r\n        }\r\n\r\n        setCartItems([]);\r\n        setActiveStep(\"complete\");\r\n        toast.success(\"Order placed successfully!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(error.message || \"Order placement failed\");\r\n    }\r\n  }\r\n\r\n  if (activeStep === \"complete\") {\r\n    return (\r\n      <div className=\"order-complete\">\r\n        <div className=\"complete-card\">\r\n          <div className=\"checkmark\">✓</div>\r\n          <h2>Order Confirmed!</h2>\r\n          <p>Thank you for your purchase. Your order has been received.</p>\r\n          <Link to=\"/\" className=\"btn continue-shopping\">\r\n            Continue Shopping\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return cartItems.length > 0 ? (\r\n    <Fragment>\r\n      <div className=\"cart-container\">\r\n        {activeStep === \"checkout\" && (\r\n          <button className=\"back-to-cart\" onClick={() => setActiveStep(\"cart\")}>\r\n            <FaArrowLeft /> Back to Cart\r\n          </button>\r\n        )}\r\n        \r\n        <div className=\"cart-content\">\r\n          {activeStep === \"cart\" ? (\r\n            <>\r\n              <div className=\"cart-items-section\">\r\n                <h2 className=\"cart-title\">\r\n                  Your Shopping Cart <span>({totalItems} items)</span>\r\n                  <br/><h5>Buy morethan 2500 and get free shipping</h5>\r\n                </h2>\r\n                <div className=\"cart-items\">\r\n                  {cartItems.map((item) => (\r\n                    <div key={item.product._id} className=\"cart-item\">\r\n                      <div className=\"item-image-container\">\r\n                        <img\r\n                          src={item.product.images[0].image}\r\n                          alt={item.product.name}\r\n                          className=\"cart-item-image\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"cart-item-details\">\r\n                        <div className=\"item-info\">\r\n                          <Link to={`/product/${item.product._id}`} className=\"cart-item-name\">\r\n                            {item.product.name}\r\n                          </Link>\r\n                          <p className=\"cart-item-price\">Rs {item.product.price.toLocaleString()}</p>\r\n                        </div>\r\n                        <div className=\"item-controls\">\r\n                          <div className=\"quantity-control\">\r\n                            <button\r\n                              className=\"qty-btn\"\r\n                              onClick={() => decreaseQty(item)}\r\n                              disabled={item.qty <= 1}\r\n                              data-tooltip=\"Decrease quantity\"\r\n                            >\r\n                              <FaMinus />\r\n                            </button>\r\n                            <span className=\"quantity\">{item.qty}</span>\r\n                            <button\r\n                              className=\"qty-btn\"\r\n                              onClick={() => increaseQty(item)}\r\n                              disabled={item.qty >= item.product.stock}\r\n                              data-tooltip=\"Increase quantity\"\r\n                            >\r\n                              <FaPlus />\r\n                            </button>\r\n                          </div>\r\n                          <button \r\n                            className=\"remove-btn\" \r\n                            onClick={() => removeItem(item)}\r\n                            data-tooltip=\"Remove item\"\r\n                          >\r\n                            <FaTrash /> Remove\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"order-summary-section\">\r\n                <div className=\"order-summary\">\r\n                  <h3>Order Summary</h3>\r\n                  <div className=\"summary-row\">\r\n                    <span>Subtotal</span>\r\n                    <span>Rs {subtotal.toLocaleString()}</span>\r\n                  </div>\r\n                  <div className=\"summary-row\">\r\n                    <span>Shipping</span>\r\n                    <span>{shipping === 0 ? \"FREE\" : `Rs ${shipping}`}</span>\r\n                  </div>\r\n                  <div className=\"summary-row\">\r\n                    <span>Tax (5%)</span>\r\n                    <span>Rs {tax.toFixed(2)}</span>\r\n                  </div>\r\n                  <div className=\"summary-row total\">\r\n                    <span>Total</span>\r\n                    <span>Rs {total.toFixed(2)}</span>\r\n                  </div>\r\n                  <button\r\n                    className=\"checkout-btn\"\r\n                    onClick={() => setActiveStep(\"checkout\")}\r\n                  >\r\n                    Proceed to Checkout\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"checkout-section\">\r\n              <div className=\"checkout-form-container\">\r\n                <h2>Checkout</h2>\r\n                <form onSubmit={placeOrderHandler} className=\"checkout-form\">\r\n                  <div className=\"form-section\">\r\n                    <h3><FaUser /> Personal Information</h3>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"fullName\"\r\n                        value={formData.fullName}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Full Name\"\r\n                        required\r\n                      />\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Email Address\"\r\n                        required\r\n                      />\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"phone\"\r\n                        value={formData.phone}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Phone Number\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-section\">\r\n                    <h3><FaMapMarkerAlt /> Shipping Address</h3>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        value={formData.address}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Street Address\"\r\n                        required\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"city\"\r\n                        value={formData.city}\r\n                        onChange={handleChange}\r\n                        placeholder=\"City\"\r\n                        required\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"zipCode\"\r\n                        value={formData.zipCode}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Zip Code\"\r\n                        required\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"country\"\r\n                        value={formData.country}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Country\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-section\">\r\n                    <h3><FaCreditCard /> Payment Details</h3>\r\n                    <CardElement options={{\r\n                      style: {\r\n                        base: {\r\n                          fontSize: '16px',\r\n                          color: '#424770',\r\n                          '::placeholder': {\r\n                            color: '#aab7c4',\r\n                          },\r\n                        },\r\n                        invalid: {\r\n                          color: '#9e2146',\r\n                        },\r\n                      },\r\n                    }} />\r\n                  </div>\r\n                  <div className=\"order-summary-checkout\">\r\n                    <h3>Order Summary</h3>\r\n                    <div className=\"summary-row total\">\r\n                      <span>Total</span>\r\n                      <span>Rs {total.toFixed(2)}</span>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"place-order-btn\">\r\n                      Place Order\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  ) : (\r\n    <div className=\"empty-cart\">\r\n      <h2>Your cart is empty!</h2>\r\n      <Link to=\"/\" className=\"btn continue-shopping\">\r\n        Continue Shopping\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n// import { Fragment, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { toast } from \"react-toastify\";\r\n// import { FaPlus, FaMinus, FaTrash, FaArrowLeft, FaCreditCard, FaMapMarkerAlt, FaUser } from \"react-icons/fa\";\r\n// import { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n\r\n\r\n// const stripe = useStripe();\r\n// const elements = useElements();\r\n\r\n\r\n// export default function Cart({ cartItems, setCartItems }) {\r\n//   const [activeStep, setActiveStep] = useState(\"cart\"); // 'cart', 'checkout', 'complete'\r\n//   const API_URL = \"http://localhost:5001\";\r\n\r\n//   // Example for your Product component\r\n//   async function placeOrderHandler(e) {\r\n//     e.preventDefault();\r\n    \r\n//     // Validate all required fields\r\n//     const requiredFields = ['fullName', 'email', 'phone', 'address', 'city', 'zipCode', 'country'];\r\n//     const missingFields = requiredFields.filter(field => !formData[field].trim());\r\n  \r\n//     if (missingFields.length > 0) {\r\n//       toast.error(`Missing required fields: ${missingFields.join(', ')}`);\r\n//       return;\r\n//     }\r\n  \r\n//     // Validate payment details\r\n//     const cardNum = formData.cardNumber.replace(/\\s/g, '');\r\n//     if (!/^\\d{16}$/.test(cardNum)) {\r\n//       toast.error('Invalid card number (must be 16 digits)');\r\n//       return;\r\n//     }\r\n  \r\n//     try {\r\n//       const orderData = {\r\n//         cartItems: cartItems.map(item => ({\r\n//           product: {\r\n//             _id: item.product._id,\r\n//             name: item.product.name,\r\n//             price: item.product.price\r\n//           },\r\n//           qty: item.qty\r\n//         })),\r\n//         formData: {\r\n//           ...formData,\r\n//           // Ensure phone is string (some validations expect string)\r\n//           phone: String(formData.phone)\r\n//         },\r\n//         subtotal,\r\n//         shipping,\r\n//         tax,\r\n//         total\r\n//       };\r\n  \r\n//       const response = await fetch(`${API_URL}/api/v1/order`, {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify(orderData)\r\n//       });\r\n  \r\n//       const data = await response.json();\r\n  \r\n//       if (!response.ok) {\r\n//         // Handle specific backend validation errors\r\n//         if (data.error && data.error.includes('validation failed')) {\r\n//           const validationErrors = Object.entries(data.errors || {})\r\n//             .map(([field, error]) => `${field}: ${error.message}`);\r\n//           toast.error(`Validation errors:\\n${validationErrors.join('\\n')}`);\r\n//         } else {\r\n//           throw new Error(data.message || 'Failed to place order');\r\n//         }\r\n//         return;\r\n//       }\r\n  \r\n//       // Success case\r\n//       setCartItems([]);\r\n//       setActiveStep('complete');\r\n//       toast.success('Order confirmed!');\r\n      \r\n//     } catch (error) {\r\n//       console.error('Order error:', error);\r\n//       toast.error(error.message || 'Failed to place order. Please try again.');\r\n//     }\r\n//   }\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     fullName: \"\",\r\n//     email: \"\",\r\n//     phone: \"\",\r\n//     address: \"\",\r\n//     city: \"\",\r\n//     zipCode: \"\",\r\n//     country: \"\",\r\n//     cardNumber: \"\",\r\n//     expiryDate: \"\",\r\n//     cvv: \"\",\r\n//   });\r\n\r\n//   function increaseQty(item) {\r\n//     if (item.product.stock <= item.qty) {\r\n//       toast.warning(`Only ${item.product.stock} available in stock`);\r\n//       return;\r\n//     }\r\n//     const updatedItems = cartItems.map((i) =>\r\n//       i.product._id === item.product._id ? { ...i, qty: i.qty + 1 } : i\r\n//     );\r\n//     setCartItems(updatedItems);\r\n//   }\r\n  \r\n//   function decreaseQty(item) {\r\n//     if (item.qty > 1) {\r\n//       const updatedItems = cartItems.map((i) =>\r\n//         i.product._id === item.product._id ? { ...i, qty: i.qty - 1 } : i\r\n//       );\r\n//       setCartItems(updatedItems);\r\n//     }\r\n//   }\r\n  \r\n//   function removeItem(item) {\r\n//     const updatedItems = cartItems.filter((i) => i.product._id !== item.product._id);\r\n//     setCartItems(updatedItems);\r\n//     toast.success(`${item.product.name} removed from cart`);\r\n//   }\r\n\r\n//   async function placeOrderHandler(e) {\r\n//     e.preventDefault();\r\n    \r\n//     // Validate all form fields\r\n//     const emptyFields = Object.entries(formData).some(([key, value]) => {\r\n//       // Skip CVV validation here if you have separate validation\r\n//       if (key === 'cvv') return false;\r\n//       return value.trim() === \"\";\r\n//     });\r\n  \r\n//     if (emptyFields) {\r\n//       toast.error(\"All fields are required!\");\r\n//       return;\r\n//     }\r\n  \r\n//     // Validate card details\r\n//     if (!/^\\d{16}$/.test(formData.cardNumber.replace(/\\s/g, ''))) {\r\n//       toast.error(\"Please enter a valid 16-digit card number\");\r\n//       return;\r\n//     }\r\n  \r\n//     if (!/^\\d{3,4}$/.test(formData.cvv)) {\r\n//       toast.error(\"Please enter a valid CVV (3 or 4 digits)\");\r\n//       return;\r\n//     }\r\n  \r\n//     try {\r\n//       const response = await fetch(`${API_URL}/api/v1/order`, {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({\r\n//           cartItems,\r\n//           formData,\r\n//           subtotal,\r\n//           shipping,\r\n//           tax,\r\n//           total\r\n//         }),\r\n//       });\r\n  \r\n//       const data = await response.json();\r\n  \r\n//       if (!response.ok) {\r\n//         throw new Error(data.error || 'Failed to plac0e order2121131161');\r\n//       }\r\n  \r\n//       if (data.success) {\r\n//         setCartItems([]);\r\n//         setActiveStep(\"complete\");\r\n//         toast.success(\"Order Confirmed!\");\r\n//       } else {\r\n//         if (data.stockIssues) {\r\n//           // Handle stock issues\r\n//           data.stockIssues.forEach(issue => {\r\n//             toast.error(`${issue.name}: ${issue.error}${issue.available ? ` (Available: ${issue.available})` : ''}`);\r\n//           });\r\n          \r\n//           // Remove problematic items from cart\r\n//           const updatedCart = cartItems.filter(item => \r\n//             !data.stockIssues.some(issue => issue.productId === item.product._id)\r\n//           );\r\n//           setCartItems(updatedCart);\r\n//         } else {\r\n//           toast.error(data.error || \"Failed to placepjkk order\");\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Order error:\", error);\r\n//       toast.error(error.message || \"Failed to place order. Please try again.\");\r\n//     }\r\n//   }\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const totalItems = cartItems.reduce((acc, item) => acc + item.qty, 0);\r\n//   const subtotal = cartItems.reduce((acc, item) => acc + item.product.price * item.qty, 0);\r\n//   const shipping = subtotal > 5000 ? 0 : 250;\r\n//   const tax = subtotal * 0.05;\r\n//   const total = subtotal + shipping + tax;\r\n\r\n//   if (activeStep === \"complete\") {\r\n//     return (\r\n//       <div className=\"order-complete\">\r\n//         <div className=\"complete-card\">\r\n//           <div className=\"checkmark\">✓</div>\r\n//           <h2>Order Confirmed!</h2>\r\n//           <p>Thank you for your purchase. Your order has been received.</p>\r\n//           <Link to=\"/\" className=\"btn continue-shopping\">\r\n//             Continue Shopping\r\n//           </Link>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n\r\n\r\n//   //Stripe payment integration\r\n//   async function placeOrderHandler(e) {\r\n//     e.preventDefault();\r\n  \r\n//     if (!stripe || !elements) {\r\n//       toast.error(\"Stripe not loaded yet\");\r\n//       return;\r\n//     }\r\n  \r\n//     try {\r\n//       // Fetch payment intent client secret from backend first\r\n//       const paymentIntentRes = await fetch(`${API_URL}/api/v1/create-payment-intent`, {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ \r\n//           amount: total * 100 // Stripe expects amount in cents\r\n//         }),\r\n//       });\r\n  \r\n//       const { clientSecret } = await paymentIntentRes.json();\r\n  \r\n//       const result = await stripe.confirmCardPayment(clientSecret, {\r\n//         payment_method: {\r\n//           card: elements.getElement(CardElement),\r\n//           billing_details: {\r\n//             name: formData.fullName,\r\n//             email: formData.email,\r\n//             phone: formData.phone,\r\n//             address: {\r\n//               line1: formData.address,\r\n//               city: formData.city,\r\n//               postal_code: formData.zipCode,\r\n//               country: formData.country,\r\n//             },\r\n//           },\r\n//         },\r\n//       });\r\n  \r\n//       if (result.error) {\r\n//         toast.error(result.error.message);\r\n//         return;\r\n//       }\r\n  \r\n//       if (result.paymentIntent.status === \"succeeded\") {\r\n//         // Now create the order in backend\r\n//         const orderResponse = await fetch(`${API_URL}/api/v1/order`, {\r\n//           method: \"POST\",\r\n//           headers: { \"Content-Type\": \"application/json\" },\r\n//           body: JSON.stringify({\r\n//             cartItems,\r\n//             formData,\r\n//             subtotal,\r\n//             shipping,\r\n//             tax,\r\n//             total,\r\n//             paymentIntentId: result.paymentIntent.id,\r\n//           }),\r\n//         });\r\n  \r\n//         const orderData = await orderResponse.json();\r\n  \r\n//         if (!orderResponse.ok) {\r\n//           throw new Error(orderData.error || \"Failed to place order\");\r\n//         }\r\n  \r\n//         setCartItems([]);\r\n//         setActiveStep(\"complete\");\r\n//         toast.success(\"Order placed successfully!\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       toast.error(error.message || \"Order placement failed\");\r\n//     }\r\n//   }\r\n  \r\n//   return cartItems.length > 0 ? (\r\n//     <Fragment>\r\n//       <div className=\"cart-container\">\r\n//         {activeStep === \"checkout\" && (\r\n//           <button className=\"back-to-cart\" onClick={() => setActiveStep(\"cart\")}>\r\n//             <FaArrowLeft /> Back to Cart\r\n//           </button>\r\n//         )}\r\n        \r\n//         <div className=\"cart-content\">\r\n//           {activeStep === \"cart\" ? (\r\n//             <>\r\n//               <div className=\"cart-items-section\">\r\n//                 <h2 className=\"cart-title\">\r\n//                   Your Shopping Cart <span>({totalItems} items)</span>\r\n//                 </h2>\r\n//                 <div className=\"cart-items\">\r\n//                   {cartItems.map((item) => (\r\n//                     <div key={item.product._id} className=\"cart-item\">\r\n//                       <div className=\"item-image-container\">\r\n//                         <img\r\n//                           src={item.product.images[0].image}\r\n//                           alt={item.product.name}\r\n//                           className=\"cart-item-image\"\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"cart-item-details\">\r\n//                         <div className=\"item-info\">\r\n//                           <Link to={`/product/${item.product._id}`} className=\"cart-item-name\">\r\n//                             {item.product.name}\r\n//                           </Link>\r\n//                           <p className=\"cart-item-price\">Rs {item.product.price.toLocaleString()}</p>\r\n//                         </div>\r\n//                         <div className=\"item-controls\">\r\n//                         <div className=\"quantity-control\">\r\n//   <button\r\n//     className=\"qty-btn\"\r\n//     onClick={() => decreaseQty(item)}\r\n//     disabled={item.qty <= 1}\r\n//     data-tooltip=\"Decrease quantity\"\r\n//   >\r\n//     <FaMinus />\r\n//   </button>\r\n//   <span className=\"quantity\">{item.qty}</span>\r\n//   <button\r\n//     className=\"qty-btn\"\r\n//     onClick={() => increaseQty(item)}\r\n//     disabled={item.qty >= item.product.stock}\r\n//     data-tooltip=\"Increase quantity\"\r\n//   >\r\n//     <FaPlus />\r\n//   </button>\r\n// </div>\r\n// <button \r\n//   className=\"remove-btn\" \r\n//   onClick={() => removeItem(item)}\r\n//   data-tooltip=\"Remove item\"\r\n// >\r\n//   <FaTrash /> Remove\r\n// </button>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"order-summary-section\">\r\n//   <div className=\"order-summary\">\r\n//     <h3>Order Summary</h3>\r\n//     <div className=\"summary-row\">\r\n//       <span>Subtotal</span>\r\n//       <span>Rs {subtotal.toLocaleString()}</span>\r\n//     </div>\r\n//     <div className=\"summary-row\">\r\n//       <span>Shipping</span>\r\n//       <span>{shipping === 0 ? \"FREE\" : `Rs ${shipping}`}</span>\r\n//     </div>\r\n//     <div className=\"summary-row\">\r\n//       <span>Tax (5%)</span>\r\n//       <span>Rs {tax.toFixed(2)}</span>\r\n//     </div>\r\n//     <div className=\"summary-row total\">\r\n//       <span>Total</span>\r\n//       <span>Rs {total.toFixed(2)}</span>\r\n//     </div>\r\n//     <button\r\n//       className=\"checkout-btn\"\r\n//       onClick={() => setActiveStep(\"checkout\")}\r\n//     >\r\n//       Proceed to Checkout\r\n//     </button>\r\n//   </div>\r\n// </div>\r\n//             </>\r\n//           ) : (\r\n//             <div className=\"checkout-section\">\r\n//               <div className=\"checkout-form-container\">\r\n//                 <h2>Checkout</h2>\r\n//                 <div className=\"checkout-steps\">\r\n//                   <div className={`step ${activeStep === \"cart\" ? \"active\" : \"\"}`}>\r\n//                     <span>1</span> Cart\r\n//                   </div>\r\n//                   <div className={`step ${activeStep === \"checkout\" ? \"active\" : \"\"}`}>\r\n//                     <span>2</span> Checkout\r\n//                   </div>\r\n//                   <div className={`step ${activeStep === \"complete\" ? \"active\" : \"\"}`}>\r\n//                     <span>3</span> Confirmation<br/>\r\n//                   </div>\r\n//                 </div>\r\n                \r\n//                 <form onSubmit={placeOrderHandler} className=\"checkout-form\">\r\n//                   <div className=\"form-section\">\r\n//                     <br/>\r\n//                     <h3><FaUser /> Personal Information</h3>\r\n//                     <div className=\"form-group\">\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         name=\"fullName\"\r\n//                         value={formData.fullName}\r\n//                         onChange={handleChange}\r\n//                         placeholder=\"Name\"\r\n//                         required\r\n//                       />\r\n                      \r\n\r\n//                     <input\r\n//                         type=\"email\"\r\n//                         name=\"email\"\r\n//                         value={formData.email}\r\n//                         onChange={handleChange}\r\n//                         placeholder=\"Email Address\"\r\n//                         required\r\n//                       />\r\n//                       <input\r\n//                         type=\"number\"\r\n//                         name=\"phone\"\r\n//                         value={formData.phone}\r\n//                         onChange={handleChange}\r\n//                         placeholder=\"Phone Number\"\r\n//                         required\r\n//                       />\r\n\r\n//                     </div>\r\n//                   </div>\r\n//                   {/*→ Stripe does NOT allow you to collect raw card details using normal inputs (for security/PCI-DSS rules).\r\n//                   → You must use Stripe's CardElement or Stripe Elements to securely handle card numbers, expiry, CVV etc.8→*/}\r\n//                   <div className=\"form-section\">\r\n//                     <h3><FaMapMarkerAlt /> Shipping Address</h3>\r\n//                     <div className=\"form-group\">\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         name=\"address\"\r\n//                         value={formData.address}\r\n//                         onChange={handleChange}\r\n//                         placeholder=\"Street Address\"\r\n//                         required\r\n//                       />\r\n//                     </div>\r\n//                     <div className=\"form-row\">\r\n//                       <div className=\"form-group\">\r\n//                         <input\r\n//                           type=\"text\"\r\n//                           name=\"city\"\r\n//                           value={formData.city}\r\n//                           onChange={handleChange}\r\n//                           placeholder=\"City\"\r\n//                           required\r\n//                         />\r\n//                       </div>\r\n//                       <div className=\"form-group\">\r\n//                         <input\r\n//                           type=\"text\"\r\n//                           name=\"zipCode\"\r\n//                           value={formData.zipCode}\r\n//                           onChange={handleChange}\r\n//                           placeholder=\"Zip Code\"\r\n//                           required\r\n//                         />\r\n//                       </div>\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         name=\"country\"\r\n//                         value={formData.country}\r\n//                         onChange={handleChange}\r\n//                         placeholder=\"Country\"\r\n//                         required\r\n//                       />\r\n//                     </div>\r\n//                   </div><div className=\"form-section\">\r\n//                   <h3><FaCreditCard /> Payment Details</h3>\r\n//                   <div className=\"form-group\">\r\n//                     <CardElement options={{\r\n//                       style: {\r\n//                         base: {\r\n//                           fontSize: '16px',\r\n//                           color: '#424770',\r\n//                           '::placeholder': {\r\n//                             color: '#aab7c4',\r\n//                           },\r\n//                         },\r\n//                         invalid: {\r\n//                           color: '#9e2146',\r\n//                         },\r\n//                       },\r\n//                     }} />\r\n//                   </div>\r\n\r\n//                 </div>\r\n\r\n                  \r\n               \r\n                  \r\n//                   <div className=\"order-summary-checkout\">\r\n//                     <h3>Order Summary</h3>\r\n//                     {cartItems.map((item) => (\r\n//                       <div key={item.product._id} className=\"checkout-item\">\r\n//                         <span>\r\n//                           {item.product.name} × {item.qty}\r\n//                         </span>\r\n//                         <span>Rs {(item.product.price * item.qty).toLocaleString()}</span>\r\n//                       </div>\r\n//                     ))}\r\n//                     <div className=\"summary-row\">\r\n//                       <span>Subtotal</span>\r\n//                       <span>Rs {subtotal.toLocaleString()}</span>\r\n//                     </div>\r\n//                     <div className=\"summary-row\">\r\n//                       <span>Shipping</span>\r\n//                       <span>{shipping === 0 ? \"FREE\" : `Rs ${shipping}`}</span>\r\n//                     </div>\r\n//                     <div className=\"summary-row\">\r\n//                       <span>Tax (5%)</span>\r\n//                       <span>Rs {tax.toFixed(2)}</span>\r\n//                     </div>\r\n//                     <div className=\"summary-row total\">\r\n//                       <span>Total</span>\r\n//                       <span>Rs {total.toFixed(2)}</span>\r\n//                     </div>\r\n//                     <button type=\"submit\" className=\"place-order-btn\">\r\n//                       Place Order\r\n//                     </button>\r\n//                   </div>\r\n//                 </form>\r\n//               </div>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </Fragment>\r\n//   ) : (\r\n//     <div className=\"empty-cart\">\r\n//       <div className=\"empty-cart-content\">\r\n//         <div className=\"empty-cart-icon\">🛒</div>\r\n//         <h2>Your cart is empty</h2>\r\n//         <p>Looks like you haven't added anything to your cart yet</p>\r\n//         <Link to=\"/\" className=\"btn continue-shopping\">\r\n//           Continue Shopping\r\n//         </Link>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }"],"mappings":"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AEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}