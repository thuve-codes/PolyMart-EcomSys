{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\PolyMart-EcomSys\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport ProductCard from '../components/ProductCard';\nimport { useSearchParams } from 'react-router-dom';\nimport { FaSearch } from 'react-icons/fa'; // Importing the search icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5001\";\nexport default function Home() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Get the search query from the URL (if any)\n  const keyword = searchParams.get(\"keyword\") || '';\n  useEffect(() => {\n    // Trigger search when searchParams change (i.e., when the keyword changes)\n    fetch(`${API_URL}/api/v1/products?keyword=${keyword}`).then(response => response.json()).then(response => setProducts(response.products));\n  }, [keyword]); // Effect runs when the keyword changes\n\n  const handleSearchChange = e => {\n    const newKeyword = e.target.value.trim();\n    // Update searchParams with the new keyword\n    setSearchParams({\n      keyword: newKeyword\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Search for products...\",\n        value: keyword // Bind value to searchParams\n        ,\n        onChange: handleSearchChange // Update searchParams on input change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-btn\",\n        children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"products_heading\",\n      children: \"Latest Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"products\",\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"XwV462TFOzGfRkb336ME0c6wmzs=\", false, function () {\n  return [useSearchParams];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","ProductCard","useSearchParams","FaSearch","jsxDEV","_jsxDEV","API_URL","Home","_s","products","setProducts","searchParams","setSearchParams","keyword","get","fetch","then","response","json","handleSearchChange","e","newKeyword","target","value","trim","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","map","product","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/PolyMart-EcomSys/frontend/src/pages/Home.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport ProductCard from '../components/ProductCard';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { FaSearch } from 'react-icons/fa';  // Importing the search icon\r\n\r\nconst API_URL = \"http://localhost:5001\";\r\n\r\nexport default function Home() {\r\n  const [products, setProducts] = useState([]);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  // Get the search query from the URL (if any)\r\n  const keyword = searchParams.get(\"keyword\") || '';\r\n\r\n  useEffect(() => {\r\n    // Trigger search when searchParams change (i.e., when the keyword changes)\r\n    fetch(`${API_URL}/api/v1/products?keyword=${keyword}`)\r\n      .then(response => response.json())\r\n      .then(response => setProducts(response.products));\r\n  }, [keyword]);  // Effect runs when the keyword changes\r\n\r\n  const handleSearchChange = (e) => {\r\n    const newKeyword = e.target.value.trim();\r\n    // Update searchParams with the new keyword\r\n    setSearchParams({ keyword: newKeyword });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* Redesigned Search Bar */}\r\n      <div className=\"search-container\">\r\n        <input \r\n          type=\"text\"\r\n          className=\"search-input\"\r\n          placeholder=\"Search for products...\"\r\n          value={keyword}  // Bind value to searchParams\r\n          onChange={handleSearchChange}  // Update searchParams on input change\r\n        />\r\n        <button className=\"search-btn\">\r\n          <FaSearch />\r\n        </button>\r\n      </div>\r\n\r\n      <h1 id=\"products_heading\">Latest Products</h1>\r\n\r\n      <section id=\"products\" className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          {products.map(product => <ProductCard key={product.id} product={product} />)}\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}